//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.04.03 at 10:08:32 AM EDT 
//


package aero.fixm.flight._3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SurveillanceCodeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SurveillanceCodeType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="A"/&gt;
 *     &lt;enumeration value="B1"/&gt;
 *     &lt;enumeration value="B2"/&gt;
 *     &lt;enumeration value="C"/&gt;
 *     &lt;enumeration value="D1"/&gt;
 *     &lt;enumeration value="E"/&gt;
 *     &lt;enumeration value="G1"/&gt;
 *     &lt;enumeration value="H"/&gt;
 *     &lt;enumeration value="I"/&gt;
 *     &lt;enumeration value="L"/&gt;
 *     &lt;enumeration value="P"/&gt;
 *     &lt;enumeration value="S"/&gt;
 *     &lt;enumeration value="U1"/&gt;
 *     &lt;enumeration value="U2"/&gt;
 *     &lt;enumeration value="V1"/&gt;
 *     &lt;enumeration value="V2"/&gt;
 *     &lt;enumeration value="X"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "SurveillanceCodeType")
@XmlEnum
public enum SurveillanceCodeType {

    A("A"),
    @XmlEnumValue("B1")
    B_1("B1"),
    @XmlEnumValue("B2")
    B_2("B2"),
    C("C"),
    @XmlEnumValue("D1")
    D_1("D1"),
    E("E"),
    @XmlEnumValue("G1")
    G_1("G1"),
    H("H"),
    I("I"),
    L("L"),
    P("P"),
    S("S"),
    @XmlEnumValue("U1")
    U_1("U1"),
    @XmlEnumValue("U2")
    U_2("U2"),
    @XmlEnumValue("V1")
    V_1("V1"),
    @XmlEnumValue("V2")
    V_2("V2"),
    X("X");
    private final String value;

    SurveillanceCodeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SurveillanceCodeType fromValue(String v) {
        for (SurveillanceCodeType c: SurveillanceCodeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
