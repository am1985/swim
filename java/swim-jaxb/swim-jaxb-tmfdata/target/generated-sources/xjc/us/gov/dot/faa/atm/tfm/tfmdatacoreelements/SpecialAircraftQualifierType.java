//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.04.03 at 10:08:32 AM EDT 
//


package us.gov.dot.faa.atm.tfm.tfmdatacoreelements;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for specialAircraftQualifierType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="specialAircraftQualifierType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="HEAVY JET"/&gt;
 *     &lt;enumeration value="TCAS"/&gt;
 *     &lt;enumeration value="B757_TCAS"/&gt;
 *     &lt;enumeration value="B757"/&gt;
 *     &lt;enumeration value="HEAVY JET_TCAS"/&gt;
 *     &lt;enumeration value="WAKE TURBULENCE"/&gt;
 *     &lt;enumeration value="OTHER"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "specialAircraftQualifierType")
@XmlEnum
public enum SpecialAircraftQualifierType {


    /**
     * H = Heavy Jet
     * 
     */
    @XmlEnumValue("HEAVY JET")
    HEAVY_JET("HEAVY JET"),

    /**
     * T = TCAS
     * 
     */
    TCAS("TCAS"),

    /**
     * L = B757 and TCAS
     * 
     */
    @XmlEnumValue("B757_TCAS")
    B_757_TCAS("B757_TCAS"),

    /**
     * F = B757
     * 
     */
    @XmlEnumValue("B757")
    B_757("B757"),

    /**
     * B = Both Heavy Jet and TCAS
     * 
     */
    @XmlEnumValue("HEAVY JET_TCAS")
    HEAVY_JET_TCAS("HEAVY JET_TCAS"),

    /**
     * M = Wake Turbulence
     * 
     */
    @XmlEnumValue("WAKE TURBULENCE")
    WAKE_TURBULENCE("WAKE TURBULENCE"),
    OTHER("OTHER");
    private final String value;

    SpecialAircraftQualifierType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SpecialAircraftQualifierType fromValue(String v) {
        for (SpecialAircraftQualifierType c: SpecialAircraftQualifierType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
